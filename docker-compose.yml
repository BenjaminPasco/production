services:
  reverse-proxy:
    image: traefik:v3.1
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=benjamin.pasco.78@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certresolver=myresolver"
      - "--log.level=DEBUG"
      - "--accesslog=true"
    labels:
      - "traefik.http.routers.home.tls.options=myTLSOptions@file"
      - "traefik.http.routers.spotify.tls.options=myTLSOptions@file"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    restart: unless-stopped
    networks:
      - reverse-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt:/letsencrypt
  watchtower:
    image: containrrr/watchtower
    command: 
    - "--label-enable"
    - "--interval"
    - "30"
    - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  home:
    image: bpasco/production:home
    platform: linux/amd64
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.home.rule=HOST(`benpas.eu`)"
      - "traefik.http.services.home.loadbalancer.server.port=8000"
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      - HOST=true
      - NODE_ENV=production
      - PORT=8000
    # deploy:
    #   mode: replicated
    #   replicas: 2
    depends_on:
      - reverse-proxy
    restart: unless-stopped
    networks:
      - reverse-proxy

  spotify:
    image: bpasco/spotify
    platform: linux/amd64
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.spotify.rule=HOST(`spotify.benpas.eu`)"
      - "traefik.http.services.spotify.loadbalancer.server.port=8001"
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      - HOST=true
      - NODE_ENV=production
      - PORT=8001
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=spotify
      - OBJ_STORE_ENDPOINT=http://object_storage
      - OBJ_STORE_PORT=9000
      - OBJ_STORE_ACCESS_KEY=minioadmin
      - OBJ_STORE_SECRET_KEY=minioadmin
    # ports:
    #  - "8001:8001"
    # deploy:
    #   mode: replicated
    #   replicas: 2
    depends_on:
      - reverse-proxy
    restart: unless-stopped
    networks:
      - spotify
      - reverse-proxy

  object_storage:
    image: minio/minio
    ports:
      - "9000:9000" # to be removed
      - "9001:9001" # to be removed
    environment:
      MINIO_ROOT_USER: "minioadmin"  # to be removed
      MINIO_ROOT_PASSWORD: "minioadmin"  # to be removed
    command: server /data --console-address ":9001"
    volumes:
      - object_storage:/data
    networks:
      - spotify

  db:
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user # to be removed
      POSTGRES_PASSWORD: password # to be removed
      POSTGRES_DB: spotify # to be removed
    volumes:
      - postgres_data:/var/lib/postgres/data
    networks:
      - spotify

networks:
  reverse-proxy:
  spotify:

volumes:
  letsencrypt:
  object_storage:
  postgres_data:
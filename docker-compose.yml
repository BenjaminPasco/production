services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    environment:
      - ENV
      - CERTIFICATES_PATH
    volumes:
      - ./nginx/${ENV}/:/etc/nginx
      - ${CERTIFICATES_PATH}/:/etc/nginx/certificates
    networks:
      - nginx

  watchtower:
    image: containrrr/watchtower
    command: 
    - "--label-enable"
    - "--interval"
    - "30"
    - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # home:
  #   image: bpasco/production:home
  #   platform: linux/amd64
  #   labels:
  #     - "com.centurylinklabs.watchtower.enable=true"
  #   environment:
  #     - HOST=true
  #     - NODE_ENV=production
  #     - PORT=8000
  #   # deploy:
  #   #   mode: replicated
  #   #   replicas: 2
  #   restart: unless-stopped
  #   networks:
  #     - nginx

  spotify:
    image: bpasco/spotify:latest
    platform: linux/amd64
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      - HOST=true
      - NODE_ENV=production
      - PORT=8001
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=spotify
      - OBJ_STORE_ENDPOINT=minio
      - OBJ_STORE_PORT=9000
      - OBJ_STORE_ACCESS_KEY=minioadmin
      - OBJ_STORE_SECRET_KEY=minioadmin
    # deploy:
    #   mode: replicated
    #   replicas: 2
    restart: unless-stopped
    networks:
      - nginx
      - minio
      - db

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: "minioadmin"  # to be removed
      MINIO_ROOT_PASSWORD: "minioadmin"  # to be removed
    command: server /data --console-address ":9001"
    volumes:
      - minio:/data
    networks:
      - minio

  db:
    image: postgres:alpine
    environment:
      POSTGRES_USER: user # to be removed
      POSTGRES_PASSWORD: password # to be removed
      POSTGRES_DB: spotify # to be removed
    volumes:
      - postgres_data:/var/lib/postgres/data
    networks:
      - db

networks:
  nginx:
    driver: bridge 
  minio:
    driver: bridge
  db:
    driver: bridge

volumes:
  minio:
  postgres_data:
  letsencrypt: